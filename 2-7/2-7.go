package main

import (
	"fmt"
	"math/rand"
	"time"
)

/*
Что выведет программа?

Объяснить работу конвейера с использованием select.
*/
//Функция asChan
//Создаёт горутину, которая поочерёдно отправляет значения из среза vs в канал c.
//Между отправками случайная задержка от 0 до 999 мс.
//После отправки всех значений — закрывает канал.
func asChan(vs ...int) <-chan int {
	c := make(chan int)
	go func() {
		for _, v := range vs {
			c <- v
			time.Sleep(time.Duration(rand.Intn(1000)) * time.Millisecond)
		}
		close(c)
	}()
	return c
}

// слияние двух каналов в один, с использованием select.
// select неблокирующе ожидает, пока хотя бы один из каналов (a или b) будет готов отправить значение.
// Если оба канала готовы — выбирается случайно один (Go не гарантирует порядок при равной готовности).
// Когда канал закрывается, получение значения из него возвращает (zeroValue, false), то есть ok == false.
// В этом случае мы обнуляем переменную канала (a = nil или b = nil), чтобы больше не выбирать из него в select.
// В Go, если в select есть case с nil-каналом, он никогда не выбирается. Это позволяет "отключить" канал после закрытия.
//
// Как только оба канала закрыты (a == nil && b == nil), основной канал c закрывается, и горутина завершается.
func merge(a, b <-chan int) <-chan int {
	c := make(chan int)
	go func() {
		for {
			select {
			case v, ok := <-a:
				if ok {
					c <- v
				} else {
					a = nil
				}
			case v, ok := <-b:
				if ok {
					c <- v
				} else {
					b = nil
				}
			}
			if a == nil && b == nil {
				close(c)
				return
			}
		}
	}()
	return c
}

// Программа выведет некоторую перестановку чисел от 1 до 8,
// порядок будет случайным, но все числа от 1 до 8 будут выведены ровно один раз,
// без дубликатов и без пропусков.
func main() {
	rand.Seed(time.Now().Unix())
	//a := asChan(1, 3, 5, 7) — канал, из которого будут приходить нечётные числа в порядке 1→3→5→7, но с произвольными паузами.
	a := asChan(1, 3, 5, 7)
	//b := asChan(2, 4, 6, 8) — аналогично, чётные числа в порядке 2→4→6→8, тоже с паузами.
	b := asChan(2, 4, 6, 8)
	c := merge(a, b)
	for v := range c {
		fmt.Print(v)
	}
}

// программа напечатает случайную череду чисел от 1 до 8, например 21436587, где нечётные идут в порядке 1→3→5→7, чётные — 2→4→6→8, но между собой они перемешаны.
