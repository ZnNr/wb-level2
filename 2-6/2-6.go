package main

import "fmt"

/*
Что выведет программа?

Объяснить поведение срезов при передаче их в функцию.

package main

import (

	"fmt"

)

	func main() {
	  var s = []string{"1", "2", "3"}
	  modifySlice(s)
	  fmt.Println(s)
	}

	func modifySlice(i []string) {
	  i[0] = "3"
	  i = append(i, "4")
	  i[1] = "5"
	  i = append(i, "6")
	}
*/
func main() {
	var s = []string{"1", "2", "3"}
	modifySlice(s)
	fmt.Println(s) //output [3 2 3]
}

func modifySlice(i []string) {
	i[0] = "3"
	// Изменяем элемент в общем базовом массиве.
	// Теперь и s, и i видят: ["3", "2", "3"]. это то что будет выведено

	i = append(i, "4")
	//Текущая длина = 3, вместимость = 3  нужно расширить.
	// Go выделяет новый массив (обычно cap = 6), копирует туда ["3","2","3"] и добавляет "4".
	//Теперь i указывает на новый массив: ["3","2","3","4"].
	//s по-прежнему указывает на старый массив: ["3","2","3"].

	i[1] = "5"
	//Изменяем элемент в новом массиве → ["3","5","3","4"].
	//На s это не влияет.
	i = append(i, "6")
	//Просто добавляем в новый массив → ["3","5","3","4","6"].
	//s остаётся без изменений.
}
