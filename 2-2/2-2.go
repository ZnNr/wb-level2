package main

/*
Что выведет программа?

Объяснить порядок выполнения defer функций и итоговый вывод.
*/
import "fmt"

func test() (x int) { //используется именованный возвращаемый параметр: (x int)
	defer func() {
		x++ //выполняется перед завершениемб добапвляет +1
	}()
	x = 1  // выполняется в первую очередь
	return // выполняется в последнюю очередб, возвращает 2
}

func anotherTest() int { //нет имени у возвращаемого значения. Возвращается просто int
	var x int      //  1. локальная переменная, изначально 0.
	defer func() { //5. вызывается defer
		x++ // 6. х становится 2 но это уже не влияет на возвращаемое значение
	}()
	x = 1    // 2. теперь x == 1.
	return x //3. Выполняется return x — значение x (то есть 1) помещается в регистр возврата (условно — фиксируется как возвращаемое).
}

func main() {
	fmt.Println(test())        //возвращает 2
	fmt.Println(anotherTest()) //возвращает 1
}

/*
Если возвращаемый параметр именованный, то изменения в defer затрагивают возвращаемое значение.
Если нет — то return x копирует значение, и дальнейшие изменения x не повлияют на результат.
*/
